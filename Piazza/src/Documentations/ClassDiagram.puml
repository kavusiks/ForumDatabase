@startuml

abstract class DBConn
class UserAuthCtrl
class PostCtrl
class StatsCtrl
class ConsoleUI

DBConn <|-- UserAuthCtrl
DBConn <|-- StatsCtrl
DBConn <|-- PostCtrl
UserAuthCtrl"authCtrl: 1"<--ConsoleUI
PostCtrl"postCtrl: 1" <--ConsoleUI
StatsCtrl"statsCtrl: 1"<--ConsoleUI



abstract class DBConn {
#Connection conn;
#connect()
}

class UserAuthCtrl {
+login(String, String)
}

class PostCtrl {
-{static} String STARTING_POST
-{static} String REPLY_POST
-{static} String FOLLOW_UP
-{static} String ANSWER
-{static} String COMMENT
-generatePrimaryKey()
-createPost(String, String, String, String)
-getDate()
-getTime()
+createStartingPost(String, int, String, String, String, List<String>)
+createFollowUp(boolean, int, String, String, String)
-createReplyPost(Integer, Integer, String, String, String)
+createAnswerOn(int, String, String, String)
+createCommentOn(int, String, String, String)
-createTaggedStartingPost(int, List<String>)
+searchPosts(String, String)
+getFolders(String)
+getPosts(String)
+getUserType(String)
}

class StatsCtrl {
+verifyInstructor(String)
-verifyUserInCourse(String, String)
-printStats(String)
+getUserStats(String, String)
}

class ConsoleUI {
-String loggedInEmail
-{static}ACTIVE_COURSE_CODE
-List<String> ALL_TAGS
-Scanner inputScanner
+login()
-createStartingPost()
-getTag(List<String>)
-searchPosts()
-createAnswerOn()
-viewStats()
-invalidAction()
+chooseAction()
+{static}main(String[])
}



@enduml
